>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> module_doc = __import__('7-base_geometry').__doc__

>>> print(len(module_doc) > 0)
True

>>> class_doc = __import__('7-base_geometry').BaseGeometry.__doc__

>>> print(len(class_doc) > 0)
True

>>> function_doc = __import__('7-base_geometry').BaseGeometry.area.__doc__
>>> print(len(function_doc) > 0)
True

>>> function_doc = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
>>> print(len(function_doc) > 0)
True

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)


>>> try:
...    bg.integer_validator("name", "John")
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> try:
...    bg.integer_validator("distance", -4)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0

>>> try:
...    bg.integer_validator("age", 0)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0

>>> try:
...    bg.integer_validator(8)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] integer_validator() missing 1 required positional argument: 'value'

>>> try:
...    bg.integer_validator()
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented





